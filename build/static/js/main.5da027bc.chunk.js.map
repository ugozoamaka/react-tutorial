{"version":3,"sources":["Table.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","characterData","removeCharacter","className","TableHeader","TableBody","rows","map","row","index","name","job","onClick","Form","handleChange","event","target","value","setState","onFormSubmit","preventDefault","handleSubmit","state","initialState","this","onSubmit","for","type","id","onChange","Component","App","characters","filter","character","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAceA,EAXD,SAACC,GAAW,IACfC,EAAkCD,EAAlCC,cAAeC,EAAmBF,EAAnBE,gBAEtB,OACE,wBAAOC,UAAU,QAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWF,cAAeA,EAAeC,gBAAiBA,QAO5DE,EAAc,WAChB,OACE,uBAAOD,UAAU,aAAjB,SACE,+BACE,sCACA,qCACA,8CAUFE,EAAY,SAACL,GACjB,IAAMM,EAAON,EAAMC,cAAcM,KAAI,SAACC,EAAKC,GACzC,OACE,+BACA,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMZ,EAAME,gBAAgBO,IAAQN,UAAU,aAA/D,wBAJOM,MAUb,OAAO,gCAAQH,K,OCYJO,E,kDArDX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IAUVc,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBN,EADY,EACZA,KAAMO,EADM,EACNA,MAEd,EAAKC,SAAL,eACKR,EAAQO,KAfE,EAmBnBE,aAAe,SAACJ,GACZA,EAAMK,iBAEN,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKJ,SAAS,EAAKK,eApBnB,EAAKA,aAAe,CAChBb,KAAM,GACNC,IAAK,IAGT,EAAKW,MAAQ,EAAKC,aARH,E,0CA0BnB,WAAU,IAAD,EACiBC,KAAKF,MAAnBZ,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,uBAAMc,SAAUD,KAAKL,aAArB,UACI,uBAAOO,IAAI,OAAX,kBACA,uBACIC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHX,MAAOP,EACPmB,SAAUL,KAAKV,eACnB,uBAAOY,IAAI,MAAX,iBACA,uBACIC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHX,MAAON,EACPkB,SAAUL,KAAKV,eACnB,wBAAQa,KAAK,SAAb,2B,GA9CGG,aCkCJC,E,4MAhCXT,MAAQ,CACNU,WAAY,I,EAGd9B,gBAAkB,SAACO,GAAW,IACrBuB,EAAc,EAAKV,MAAnBU,WAEP,EAAKd,SAAS,CACZc,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAKnBY,aAAe,SAACa,GACd,EAAKhB,SAAS,CAACc,WAAW,GAAD,mBAAM,EAAKV,MAAMU,YAAjB,CAA6BE,O,4CAIxD,WAAU,IAEFF,EAAeR,KAAKF,MAApBU,WAER,OACE,sBAAK7B,UAAU,YAAf,UACE,cAAC,EAAD,CAAOF,cAAe+B,EAAY9B,gBAAiBsB,KAAKtB,kBACxD,cAAC,EAAD,CAAMmB,aAAcG,KAAKH,sB,GA3BfS,aCQHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5da027bc.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\n\r\nconst Table = (props) => {\r\n    const {characterData, removeCharacter} = props\r\n  \r\n    return (\r\n      <table className=\"table\">\r\n        <TableHeader />\r\n        <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n      </table>\r\n    )\r\n  }\r\n\r\nexport default Table\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Job</th>\r\n          <th>Remove</th>\r\n\r\n        </tr>\r\n      </thead>\r\n    )\r\n    return <thead />\r\n  }\r\n\r\n\r\n\r\n  const TableBody = (props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n      return (\r\n        <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removeCharacter(index)} className=\"btn-danger\">Delete</button>\r\n        </td>\r\n      </tr>\r\n      )\r\n    })\r\n  \r\n    return <tbody>{rows}</tbody>\r\n  }\r\n\r\n\r\n\r\n ","  \r\nimport React, {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.initialState = {\r\n            name: '',\r\n            job: ''\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    render() {\r\n        const { name, job } = this.state; \r\n\r\n        return (\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <label for=\"name\">Name</label>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    id=\"name\"\r\n                    value={name} \r\n                    onChange={this.handleChange} />\r\n                <label for=\"job\">Job</label>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"job\" \r\n                    id=\"job\"\r\n                    value={job} \r\n                    onChange={this.handleChange} />\r\n                <button type=\"submit\">\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n    state = {\n      characters: [],\n    }\n\n    removeCharacter = (index) => {\n      const {characters} = this.state\n    \n      this.setState({\n        characters: characters.filter((character, i) => {\n          return i !== index\n        }),\n      })\n    }\n\n    handleSubmit = (character) => {\n      this.setState({characters: [...this.state.characters, character]})\n    }\n    \n      \n    render() {\n\n    const { characters } = this.state\n\n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}